<Prog> ------ <functions><building>			
<functions> ------ <function><functions>/ #			 
<function> ------ <type>  id (<params>){<stats>}			   
<type> ------ int/float/distance/point/wall/doors/window/ratio
<params>--- <type>id','<params>/#
<stats>----- <stat> <stats>/ #
<stat>----- <funcstats>/<returnstats>
<returnstats>--'return'<Kim>;
<funcstats>---<normalstats>/id<LF3>;
<normalstats>---<type>id<Zip>
<Zip>----;/[<integerliteral>];/=<E>;
<LF3>------- =<E>/[<Kim>]=<E>	   
<Kim>---id/integerliteral
<E>--id<K>/integerliteral<A>/(<LF1>
<K>--<A>/<LF2>
<LF1>---id<LF4>/integerliteral,<Kim>)
<LF4>--,<LF5>
<LF5>--id<LF6>/integerliteral)
<LF6>--)/,<Kim>)
<LF2>----'.start'/'.end'
<A>--:<Kim>/||(id<LF3>/(id,id)/<arithmeticoperators><Kim>
<LF3>---&id)/,id,<Kim>,id)
<Kim>-id/integerliteral
<arithmeticoperators>--'*'/'-'/'+'/'/'/'%'
<building> ------- building <id> {<newstats>}
<newstats>--<body><newstats>/#
<body>-----<forrelatedstuff>/<floor>/<normalstats>      		
<forelatedstuff>------for(exp;exp;exp){normalstats}	
<floor>-------'floor'<id><arr>{<normalstats>}/id<arr>{<normalstats>}
<arr> ------ '[' <num>  ']'/ #
<exp>------id<conditionaloperator><E>				
<conditional>-------'<'/'>'/'=='/'<='/'>='/'!='			
